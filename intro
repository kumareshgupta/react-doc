React -
  a declarative, 
  efficient, and 
  flexible JavaScript library for building user interfaces.
  
   In React we mainly have two types of components
    1. functional
    2. class
    
    
    ====================================Default Code in index.js=========================================================
    
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import * as serviceWorker from './serviceWorker';

ReactDOM.render(<App />, document.getElementById('root'));

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();

===========================================================================

Event Handling in React
1. binding in render method
2. use arrow function in render method
3. binding the event handler in the constructor
4. use arrow function as a class property

============================================================================

When to us index as a key?
1. The items in your list do not have a unique id.
2. The list is static list and will not change.
3. The list will never be reordered or filtered.


generate uniqe key by using npm package

============================================================================

Styling React Components
=========================
1. CSS Stylesheets
2. Inline styling
3. CSS Modules
4. CSS in JS Libraries (Styled Components)

============================================================================


Lifecyle Methods
=========================
1. Mounting - When an instance of a component is being created and inserted into the DOM
2. Updating - When a component is being re-rendered as a result of chnages to either its props or state
3. Unmounting - When a component is being removed from the DOM
4. Error Handling - When there is an error during rendering, in a lifecycle method, or in the constructor of any child component

=============================================================================
